{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/AboutComponent.js","components/ContactComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","onClick","to","id","width","CardImgOverlay","Menu","menu","dishes","map","key","Breadcrumb","BreadcrumbItem","active","RenderLeader","Media","tag","left","middle","object","body","heading","About","leaders","CardHeader","title","list","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","console","log","JSON","stringify","alert","this","resetFeedbackForm","href","role","model","onSubmit","Row","Label","htmlFor","md","Col","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","Button","type","color","Component","CommentForm","state","isModalOpen","toggleModal","addComment","dishId","rating","author","comment","setState","outline","Modal","isOpen","toggle","ModalHeader","ModalBody","RenderDish","top","RenderComments","comments","options","year","month","day","sub","style","lineHeight","Date","date","toLocaleDateString","DishDetail","Header","toggleNav","handleLogin","isNavOpen","event","username","value","password","remember","checked","preventDefault","Fragment","Navbar","dark","expand","NavbarToggler","NavbarBrand","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","c","featured","promotions","exact","match","parseInt","params","commentsErrMess","postComment","postFeedback","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","message","actions","reset","firstname","newFeedback","lastname","telnum","email","agree","contactType","Math","random","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dd605121.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport {Card,CardImg,CardText,CardBody,CardTitle,CardSubtitle} from 'reactstrap'\r\nimport { Loading } from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl'\r\nimport {FadeTransform} from 'react-animation-components';\r\n\r\nfunction RenderCard({item,isLoading,errMess})\r\n{\r\n    if(isLoading)\r\n    {\r\n        return(\r\n            <Loading />\r\n        )\r\n    }\r\n    else if(errMess)\r\n    {\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        )\r\n    }\r\n    else\r\n    {\r\n        return(\r\n            <FadeTransform in \r\n            transformProps={{\r\n                exitTransform:'scale(0.5) translateY(-50%)'\r\n            }}>\r\n        <Card>\r\n                <CardImg src={baseUrl+item.image} alt={item.name} />\r\n                <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle>:null}\r\n                    <CardText>{item.description}</CardText>\r\n                </CardBody>\r\n        </Card>\r\n        </FadeTransform>\r\n    );\r\n}\r\n}\r\n\r\nfunction Home(props)\r\n{\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n            <div className=\"col-12 col-md m-1\">\r\n            <RenderCard item={props.dish} \r\n                isLoading={props.dishesLoading} \r\n                errMess = {props.dishesErrMess}    />\r\n            </div>\r\n            <div className=\"col-12 col-md m-1\">\r\n            <RenderCard item={props.promotion}\r\n            isLoading={props.promosLoading} \r\n            errMess = {props.promosErrMess} />\r\n            </div>\r\n            <div className=\"col-12 col-md m-1\">\r\n            <RenderCard item={props.leader}\r\n            isLoading={props.leadersLoading} \r\n            errMess = {props.leadersErrMess} />\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem({ dish, onClick }) {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >\r\n            <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\" key={dish.id}>\r\n                <RenderMenuItem dish={dish} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n\r\n    if (props.dishes.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {baseUrl} from '../shared/baseUrl';\r\nimport {Fade,Stagger } from 'react-animation-components';\r\n\r\n\r\nconst RenderLeader=(props)=>\r\n{\r\n    return(\r\n    <Media tag=\"li\">\r\n        <Media left middle>\r\n        <Media object src={baseUrl+ props.leader.image} alt={props.leader.name} />\r\n        </Media>\r\n\r\n        <Media body className=\"ml-5\">\r\n            <Media heading>{props.leader.name}</Media>\r\n            <p>{props.leader.designation}</p>\r\n            <p>{props.leader.description}</p>\r\n        </Media>\r\n    </Media>\r\n    );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.map((leader) => {\r\n        return (\r\n           <Fade in> <RenderLeader leader={leader}/><br /></Fade>\r\n        );\r\n    });\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                 <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                    <Stagger in>\r\n                        {leaders}\r\n                    </Stagger>\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default About;  ","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        // event.preventDefault();\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n               <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay Area, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location!</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport {\r\n    Card, CardImg, CardText, CardBody, CardTitle, BreadcrumbItem,\r\n    Breadcrumb, Button, Modal, ModalHeader, ModalBody, Row, Col, Label, useState,\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false,\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({ isModalOpen: !this.state.isModalOpen });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"col-12\">\r\n                    <Button outline onClick={this.toggleModal} color=\"secondary\">\r\n                        <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\r\n                    </Button>\r\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                        <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                        <ModalBody>\r\n                            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"rating\" md={12}>Rating</Label>\r\n                                    <Col md={12}>\r\n                                        <Control.select model=\".rating\"\r\n                                            className=\"form-control\" name=\"rating\">\r\n                                            <option>1</option>\r\n                                            <option>2</option>\r\n                                            <option>3</option>\r\n                                            <option>4</option>\r\n                                            <option>5</option>\r\n                                        </Control.select>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"author\" md={12}>Your Name</Label>\r\n                                    <Col md={12}>\r\n                                        <Control.text model=\".author\" className=\"form-control\"\r\n                                            id=\"author\" name=\"author\" placeholder=\"Your Name\"\r\n                                            validators={{\r\n                                                required,\r\n                                                minLength: minLength(3),\r\n                                                maxLength: maxLength(15),\r\n                                            }}\r\n                                        />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".author\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: \"Required\",\r\n                                                minLength: \"Must be greater than 2 characters\",\r\n                                                maxLength: \"Must be 15 characters or less\",\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"comment\" md={12}>Comment</Label>\r\n                                    <Col md={12}>\r\n                                        <Control.textarea model=\".comment\" className=\"form-control\"\r\n                                            id=\"comment\" name=\"comment\" rows=\"6\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Col md={12}>\r\n                                        <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </LocalForm>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderDish({ dish }) {\r\n    if (dish != null) {\r\n        return (\r\n            <FadeTransform\r\n            in\r\n            transformProps={{\r\n                exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n            <div>\r\n                <Card>\r\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n            </FadeTransform>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderComments({ comments, addComment, dishId }) {\r\n\r\n    let options = { year: 'numeric', month: 'short', day: 'numeric' };\r\n    if (comments) {\r\n        return (\r\n            <div>\r\n                <h4>Comments</h4>\r\n                {comments.map((sub) =>\r\n                    <div key={sub.id}>\r\n                        <div>\r\n                            <li className=\"list-unstyled\">{sub.comment}</li>\r\n                        </div>\r\n                        <div>\r\n                            <li className=\"list-unstyled\" style={{ lineHeight: 4 }}>-- {sub.author},\r\n                            <span> {new Date(sub.date).toLocaleDateString(\"en-US\", options)}</span></li>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                <CommentForm dishId={dishId} addComment={addComment} />\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    if(props.isLoading){\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null)\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={props.dish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderComments comments={props.comments}\r\n                        addComment={props.addComment} \r\n                        dishId={props.dish.id} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n        else \r\n            return (\r\n                <div></div>\r\n            );\r\n}\r\n\r\n\r\nexport default DishDetail;\r\n","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.state = {\r\n      isNavOpen: false,\r\n      isModalOpen: false\r\n    };\r\n  }\r\n\r\n  toggleNav() {\r\n    this.setState({\r\n      isNavOpen: !this.state.isNavOpen\r\n    });\r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    });\r\n  }\r\n\r\n  handleLogin(event) {\r\n    this.toggleModal();\r\n    alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n        + \" Remember: \" + this.remember.checked);\r\n    event.preventDefault();\r\n\r\n}\r\n  \r\n  render() {\r\n    return(\r\n      <React.Fragment>\r\n      <div>\r\n          <Navbar dark expand=\"md\">\r\n              <div className=\"container\">\r\n                  <NavbarToggler onClick={this.toggleNav} />\r\n                  <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                  <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                      <Nav navbar>\r\n                      <NavItem>\r\n                          <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                      </NavItem>\r\n                      <NavItem>\r\n                          <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                      </NavItem>\r\n                      <NavItem>\r\n                          <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                      </NavItem>\r\n                      <NavItem>\r\n                          <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                      </NavItem>\r\n                      </Nav>\r\n                      <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                  </Collapse>\r\n              </div>\r\n          </Navbar>\r\n          <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n            </React.Fragment>\r\n        );\r\n  }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import * as ActionTypes from \"./ActionTypes\";\r\nimport {baseUrl} from '../shared/baseUrl'\t\r\nimport fetch from 'cross-fetch';\r\n\r\nexport const addComment = comment => ({\r\n  type: ActionTypes.ADD_COMMENT,\r\n  payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => dispatch => {\r\n  const newComment = {\r\n    dishId: dishId,\r\n    rating: rating,\r\n    author: author,\r\n    comment: comment\r\n  };\r\n  newComment.date = new Date().toISOString();\r\n\r\n\r\n  return fetch(baseUrl + \"comments\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(newComment),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    credentials: \"same-origin\"\r\n  })\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n error => {\r\n        throw error;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error => {\r\n      console.log(\"post comments\", error.message);\r\n      alert(\"Your comment could not be posted\\nError: \" + error.message);\r\n    });\r\n};\r\n\r\n//////////////////////////////////////////////\r\n// post feedback function\r\n\r\nexport const addFeedback = feedback => ({\r\n  type: ActionTypes.ADD_FEEDBACK,\r\n  payload: feedback\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => dispatch => {\r\n  const newFeedback = {\r\n      firstname: firstname,\r\n      lastname: lastname,\r\n      telnum : telnum,\r\n      email: email,\r\n      agree: agree,\r\n      contactType: contactType,\r\n      message: message,\r\n  };\r\n\r\n  newFeedback.date = new Date().toISOString();\r\n  newFeedback.id=Math.random()+1;\r\n\r\n\r\n  return fetch(baseUrl + \"feedback\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(newFeedback),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    credentials: \"same-origin\"\r\n})\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        throw error;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addFeedback(response)))\r\n    .catch(error => {\r\n      console.log(\"post feedbacks\", error.message);\r\n      alert(\"Your feedback could not be posted\\nError: \" + error.message);\r\n    });\r\n};\r\nexport const fetchDishes = () => dispatch => {\r\n  dispatch(dishesLoading());\r\n\r\n  return fetch(baseUrl + \"dishes\")\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n};\r\n\r\nexport const dishesLoading = () => ({\r\n  type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = errmess => ({\r\n  type: ActionTypes.DISHES_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addDishes = dishes => ({\r\n  type: ActionTypes.ADD_DISHES,\r\n  payload: dishes\r\n});\r\nexport const fetchComments = () => dispatch => {\r\n  return fetch(baseUrl + \"comments\")\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = errmess => ({\r\n  type: ActionTypes.COMMENTS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addComments = comments => ({\r\n  type: ActionTypes.ADD_COMMENTS,\r\n  payload: comments\r\n});\r\nexport const fetchPromos = () => dispatch => {\r\n  dispatch(promosLoading());\r\n\r\n  return fetch(baseUrl + \"promotions\")\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n};\r\nexport const promosLoading = () => ({\r\n  type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = errmess => ({\r\n  type: ActionTypes.PROMOS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addPromos = promos => ({\r\n  type: ActionTypes.ADD_PROMOS,\r\n  payload: promos\r\n});\r\nexport const fetchLeaders = () => dispatch => {\r\n  dispatch(leadersLoading());\r\n\r\n  return fetch(baseUrl + \"leaders\")\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n};\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = errmess => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addLeaders = leaders => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n});","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport About from './AboutComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from 'react-redux-form';\r\nimport { postComment, postFeedback, fetchLeaders, fetchDishes, fetchComments, fetchPromos } from '../redux/ActionCreators';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>\t\r\n{\t\r\n  return (\t\r\n    {\t\r\n      postComment:(dishId,rating,author,comment)=>dispatch(postComment(dishId,rating,author,comment)),\t\r\n      fetchDishes:()=>{dispatch(fetchDishes())},\t\r\n      resetFeedbackForm:()=>{dispatch(actions.reset('feedback'))},\t\r\n      fetchComments:()=>{dispatch(fetchComments())},\t\r\n      fetchPromos:()=>{dispatch(fetchPromos())},\t\r\n      fetchLeaders:()=>{dispatch(fetchLeaders())},\t\r\n      postFeedback:(values)=>postFeedback(values),\t\r\n    }\t\r\n  )\t\r\n}\r\n\r\n\r\n\r\nclass Main extends Component {\r\n\r\n \t\r\n  componentDidMount()\t\r\n  {\t\r\n    this.props.fetchDishes();\t\r\n    this.props.fetchComments();\t\r\n    this.props.fetchPromos();\t\r\n    this.props.fetchLeaders();\t\r\n  }\r\n\r\n  render() {\t\r\n    const HomePage=()=>{\t\r\n      return(\t\r\n        <Home dish={this.props.dishes.dishes.filter(c=>c.featured)[0]}\t\r\n        dishesLoading={this.props.dishes.isLoading}\t\r\n        dishesErrMess = {this.props.dishes.errMess}\t\r\n        promotion={this.props.promotions.promotions.filter(c=>c.featured)[0]}\t\r\n        promosLoading={this.props.promotions.isLoading}\t\r\n        promosErrMess = {this.props.promotions.errMess}\t\r\n        leader={this.props.leaders.leaders.filter(c=>c.featured)[0]}\t\r\n        leadersLoading={this.props.leaders.isLoading}\t\r\n        leadersErrMess = {this.props.leaders.errMess}\t\r\n        />\t\r\n        \t\r\n      )\t\r\n    }\r\n\r\n    const DishWithId=({match})=>\t\r\n    {\t\r\n      return(\t\r\n        <DishDetail dish={this.props.dishes.dishes.filter(c=>c.id===parseInt(match.params.dishId,10))[0]}\t\r\n        isLoading={this.props.dishes.isLoading}\t\r\n        errMess = {this.props.dishes.errMess}\t\r\n        comments ={this.props.comments.comments.filter(c=>c.dishId===parseInt(match.params.dishId,10))}\t\r\n        commentsErrMess = {this.props.comments.errMess}\t\r\n        postComment={this.props.postComment}\t\r\n        />\t\r\n      )\t\r\n    }\r\n\r\n    return (\t\r\n      <div>\t\r\n      <Header />\t\r\n      <TransitionGroup > \t\r\n        <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\t\r\n          <Switch>\t\r\n            <Route path='/home' component={HomePage} />\t\r\n            <Route path='/aboutus' component={()=><About leaders={this.props.leaders.leaders}/>} />\t\r\n            <Route exact path='/menu' component={()=><Menu dishes={this.props.dishes}/>} />\t\r\n            <Route path='/menu/:dishId' component={DishWithId}/>\t\r\n            <Route exact path='/contactus' component={()=><Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback}/>} />\t\r\n            <Redirect to=\"/home\" />\t\r\n          </Switch>\t\r\n        </CSSTransition>\t\r\n      </TransitionGroup>\t\r\n      <Footer />\t\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Dishes = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        dishes: []\r\n    }, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_DISHES:\r\n            return{...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return{...state, isLoading: true, errMess: null, dishes: []};\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return{...state, isLoading: false, errMess: action.payload, dishes: []};\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n    switch (action.type) {\r\n      case ActionTypes.ADD_COMMENTS:\r\n        return {...state, errMess: null, comments: action.payload};\r\n  \r\n      case ActionTypes.COMMENTS_FAILED:\r\n        return {...state, errMess: action.payload};\r\n  \r\n      case ActionTypes.ADD_COMMENT:\r\n          var comment = action.payload;\r\n          return { ...state, comments: state.comments.concat(comment)};\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        promotions: []\r\n    }, action) => {\r\n        switch (action.type) {\r\n            case ActionTypes.ADD_PROMOS:\r\n                return { ...state, isLoading: false, errMess: null, promotions: action.payload };\r\n\r\n            case ActionTypes.PROMOS_LOADING:\r\n                return { ...state, isLoading: true, errMess: null, promotions: [] }\r\n\r\n            case ActionTypes.PROMOS_FAILED:\r\n                return { ...state, isLoading: false, errMess: action.payload, promotions: [] };\r\n\r\n            default:\r\n                return state;\r\n        }\r\n};","import * as ActionTypes from './ActionTypes'\r\n\r\n\r\nexport const Leaders = (state={\r\n        isLoading:true,\r\n        errMess:null,\r\n        leaders:[]\r\n},action)=>\r\n{\r\nswitch(action.type)\r\n{\r\ncase ActionTypes.ADD_LEADERS:\r\n        return {...state,isLoading:false,errMess:null,leaders:action.payload}\r\ncase ActionTypes.LEADERS_LOADING:\r\n        return {...state,isLoading:true,errMess:null,leaders:[]}\r\n\r\ncase ActionTypes.LEADERS_FAILED:\r\n        return{...state,isLoading:false,errMess:action.payload,leaders:[]}\r\n\r\ndefault:\r\n        return state;\r\n}\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}